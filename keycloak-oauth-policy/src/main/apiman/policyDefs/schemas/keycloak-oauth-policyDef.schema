{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Keycloak OAuth Policy Configuration",
  "type": "object",
  "properties": {
    "requireOauth": {
      "title": "Require OAuth",
      "description": "Terminate request if no OAuth is provided.",
      "type": "boolean",
      "default": true
    },
    "requireTransportSecurity": {
      "title": "Require Transport Security",
      "description": "Any request used without transport security will be rejected. OAuth2 requires transport security (e.g. TLS, SSL) to provide protection against replay attacks. It is strongly advised for this option to be switched on.",
      "type": "boolean",
      "default": true
    },
    "blacklistUnsafeTokens": {
      "title": "Blacklist Unsafe Tokens",
      "description": "Any tokens used without transport security will be blackedlisted in all gateways to mitigate associated security risks. Uses distributed data store to share blacklist.",
      "type": "boolean",
      "default": false
    },
    "stripTokens": {
      "title": "Strip Tokens",
      "description": "Remove any Authorization header or token query parameter before forwarding traffic to the Service.",
      "type": "boolean"
    },
    "realm": {
      "title": "Realm",
      "description": "Realm name",
      "type": "string"
    },
    "realmCertificateString": {
      "title": "Keycloak Realm Certificate",
      "description": "To validate OAuth requests. Must be a PEM-encoded X.509 certificate, including bounding strings.",
      "type": "string",
      "format": "textarea"
    },
    "forwardAuthInfo": {
      "title": "Forward Keycloak Token Information",
      "description":  "Fields from the token can be set as headers and forwarded to the Service. Access_token corresponds to the full token.",
      "type": "array",
      "format": "table",

      "items" : {
        "type" : "object",
        "title": "Header",
        "properties": {
          "headers": {
            "title": "Header",
            "type": "string",
            "uniqueItems": true,
            "pattern": "^[^()<>@,;:\\\\<>\\/\\[\\]?={}\\s\\t]+$"
          },
          "field" : {
            "title": "Field",
            "type": "string",
            "enum": [
              "subject",
              "username",
              "email",
              "name",
              "access_token"
            ]
          }
        }
      }
    }
  }
}
